@using MedicineEshop.ViewModel
@model MedicineEshop.ViewModel.MedicineSetupModel
@{
    ViewBag.Title = "MedicineSetup";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var medicineList = ViewBag.MedicineList as List<MedicineSetupModel>;
}

<div class="page-head">
    <div class="page-title">
        <h1>Manage Medicine</h1>
    </div>
</div>

<div class="row margin-top-10">
    <div class="col-md-12">
        <div class="portlet box green">
            <div class="portlet-title">
                <div class="caption">
                    <i class="fa fa-gift"></i>Add Medicine
                </div>
                <div class="tools">
                    <a href="javascript:;" class="collapse" data-original-title="" title="">
                    </a>
                </div>
            </div>
            <div class="portlet-body">
                @using (Html.BeginForm("SaveOrUpdateMedicine", "Setup", FormMethod.Post, new { @class = "form-horizontal" }))
                {
                    @Html.AntiForgeryToken()
                <div class="form-body">
                    <br />
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(c => c.MedicineName, new { @class = "col-md-3 control-label" })
                                <div class="col-md-9">
                                    <div class="input-icon">
                                        <i class="fa fa-text-width"></i>
                                        @Html.TextBoxFor(c => c.MedicineName, new { @class = "form-control input-circle", @placeholder = "Medicine Name", @id = "medicineName", @style = "max-width: 580px;" })
                                        @Html.ValidationMessageFor(c => c.MedicineName)
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(c => c.MedicineDescription, new { @class = "col-md-3 control-label" })
                                <div class="col-md-9">
                                    <div class="input-icon">
                                        <i class="fa fa-text-width"></i>
                                        @Html.TextBoxFor(c => c.MedicineDescription, new { @class = "form-control input-circle", @placeholder = "Medicine Description", @id = "medicineDescription", @style = "max-width: 580px;" })
                                        @Html.ValidationMessageFor(c => c.MedicineDescription)
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(c => c.CompanyId, new { @class = "col-md-3 control-label" })
                                <div class="col-md-9">
                                    <div class="input-icon">
                                        @Html.DropDownListFor(m => m.CompanyId, new SelectList(ViewBag.CompanyList, "Value", "Text", Model.CompanyId), new { @class = "form-control input-circle select2", @placeholder = "Company Name", @style = "max-width: 580px;" })
                                        @Html.ValidationMessageFor(c => c.CompanyId)
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(c => c.MedicineTypeId, new { @class = "col-md-3 control-label" })
                                <div class="col-md-9">
                                    <div class="input-icon">
                                        @Html.DropDownListFor(m => m.MedicineTypeId, new SelectList(ViewBag.MedicineTypeList, "Value", "Text", Model.MedicineTypeId), new { @class = "form-control input-circle select2", @placeholder = "Medicine Type", @style = "max-width: 580px;" })
                                        @Html.ValidationMessageFor(c => c.MedicineTypeId)
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(c => c.PurchasePrice, new { @class = "col-md-3 control-label" })
                                <div class="col-md-9">
                                    <div class="input-icon">
                                        <i class="fa fa-text-width"></i>
                                        @Html.TextBoxFor(c => c.PurchasePrice, new { @class = "form-control input-circle", @autocomplete = "off", @placeholder = "Purchase Price", @id = "purchasePrice", @style = "max-width: 580px;" })
                                        @Html.ValidationMessageFor(c => c.PurchasePrice)
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(c => c.SalePrice, new { @class = "col-md-3 control-label" })
                                <div class="col-md-9">
                                    <div class="input-icon">
                                        <i class="fa fa-text-width"></i>
                                        @Html.TextBoxFor(c => c.SalePrice, new { @class = "form-control input-circle", @autocomplete = "off", @placeholder = "Sale Price", @id = "salePrice", @style = "max-width: 580px;" })
                                        @Html.ValidationMessageFor(c => c.SalePrice)
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(c => c.ActiveStatus, new { @class = "col-md-3 control-label" })
                                <div class="col-md-9">
                                    <div class="checkbox-list" style="margin-top: 8px;">

                                        @Html.CheckBoxFor(c => c.ActiveStatus, new { @class = "checker" })

                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <div class="col-md-12 text-left">
                                    @Html.HiddenFor(c => c.MedicineId)
                                    <button class="btn btn-success" type="submit"><i class="fa fa-save"></i> Save</button>
                                    <a class="btn btn-danger" href="@Url.Action("MedicineSetup", "Setup")"><i class="fa fa-cut"></i> Clear</a>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    
                </div>
                }

            </div>

        </div>


        <div class="portlet box blue-madison">
            <div class="portlet-title">
                <div class="caption">
                    <i class="fa fa-gift"></i>Medicine Lists
                </div>
                <div class="tools">
                    <a href="javascript:;" class="collapse" data-original-title="" title="">
                    </a>
                </div>
            </div>
            <div class="portlet-body">
                <div class="table-responsive">
                    <table class="table table-bordered" id="medicineTable">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>Medicine Name</th>
                                <th>Description</th>
                                <th>Medicine Company</th>
                                <th>Medicine Type</th>
                                <th>Purchase Price</th>
                                <th>Sale Price</th>
                                <th>Purchase Qty</th>
                                <th>Sale Qty</th>
                                <th>Stock Qty</th>
                                <th>Created By</th>
                                <th>Active Status</th>
                                <th class="text-center" style="width: 10%">Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (medicineList != null && medicineList.Count != 0)
                            {
                                int counter = 1;
                                foreach (var data in medicineList)
                                {
                            <tr>
                                <td>@counter</td>
                                <td>@data.MedicineName</td>
                                <td>@data.MedicineDescription</td>
                                <td>@data.CompanyName</td>
                                <td>@data.MedicineTypeName</td>
                                <td>@data.PurchasePrice Taka</td>
                                <td>@data.SalePrice Taka</td>
                                <td>@data.TotalPurchaseQty</td>
                                <td>@data.TotalSaleQty</td>
                                <td>@data.StockQty</td>
                                <td>@data.CreateBy</td>
                                @if (data.ActiveYN == "Y")
                                {
                                    <td>
                                        <i class="fa fa-check-circle" style="color: green;"> Active</i>
                                    </td>
                                }
                                else
                                {
                                    <td><i class="fa fa-times-circle" style="color: red;"></i> InActive</td>
                                }
                                <td class="text-center">
                                    @Html.ActionLink(" Edit", "MedicineSetup", "Setup", new { medicineId = data.MedicineId }, new { @class = "btn btn-primary fa fa-edit btn-xs" }) ||
                                    @Html.ActionLink(" Delete", "DeleteMedicine", "Setup", new { medicineId = data.MedicineId }, new { @class = "btn btn-danger fa fa-trash-o btn-xs" })
                                </td>
                            </tr>
                                    counter = counter + 1;
                                }
                            }

                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

@Scripts.Render("~/bundles/jqueryval")

<script>
    jQuery(document).ready(function () {
        $('.select2').select2({
            allowClear: true
        });

        var table = $("#medicineTable").dataTable();

            @{
                if (!string.IsNullOrWhiteSpace(@ViewBag.Message))
                {
                    <text>
                        var message = '@ViewBag.message';


                        toastr.options = {
                            "closeButton": true,
                            "debug": false,
                            "positionClass": "toast-top-center",
                            "onclick": null,
                            "showDuration": "1000",
                            "hideDuration": "1000",
                            "timeOut": "1000",
                            "extendedTimeOut": "1000",
                            "showEasing": "swing",
                            "hideEasing": "linear",
                            "showMethod": "fadeIn",
                            "hideMethod": "fadeOut"
                        }
                        toastr.success(message);
                    </text>
                }
            }
        });

</script>